{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf460
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Introduction of code usage for project CS 542:\
\
we have in total n files and one directory that includes all fonts for running, they are:\
\
Distinguish_Network.py\
Font.py\
Font_DN.py\
NeuralNets.py\
main.py\
utility.py\
Fonts (folder)\
\
We made two neural networks, they are \'91main.py\'92 and \'91Distinguish_Network.py\'92 \
To run any of them, simply run it on python.\
\
\
For main.py:\
	Adjusting the elements in input_letter list and output_letter list can change the input/output letter, but the number of elements in each list cannot be changed.\
\
	Adjusting parameters in the begining of the code can change the training process thus change the output. So far we found that 10 batches and 30000 epoches can give relative optimal results. More epoches will result in overfitting.(accoding to our analysis)\
\
	There will be a directory named \'91test\'92 that concludes all image output and learning curve, and a text file named \'91test_attribute_recode\'92 recording all attributes for that run. Also the test result will be shown on the end of the training. Whole training circle can take 10 minutes depends on the epoch and batch size.\
\
For Distinguish_Network.py:\
Simply run the program, and there will be two text files generated. \'91real.txt\'92 is the desired output, and \'92output.txt\'92 is the actually output using trained neural network. 1 means the test case is from the same font source, and 0 means the test case is not from the same font source.}